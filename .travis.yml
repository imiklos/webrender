dist: xenial
language: rust
rust:
  - 1.35.0
  - nightly
matrix:
  fast_finish: true
  allow_failures:
  - rust: nightly
os:
  - linux
  - osx

addons:
  apt:
    sources:
      - sourceline: 'ppa:jonathonf/python-2.7'
    packages:
      - libgl1-mesa-dev
      - llvm-3.9-dev
      - libedit-dev
      - python
env:
  - BUILD_KIND=DEBUG RUST_BACKTRACE=1 RUSTFLAGS='--deny warnings'
  - BUILD_KIND=RELEASE RUST_BACKTRACE=1
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export LLVM_CONFIG=/usr/lib/llvm-3.9/bin/llvm-config; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install zlib; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig:$PKG_CONFIG_PATH"; fi
  - pip install virtualenv
  - virtualenv ../venv
  - source ../venv/bin/activate
  - python --version
  - pip install mako voluptuous PyYAML servo-tidy
  - export VK_VERSION=1.1.108
  - wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
  - sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-$VK_VERSION-xenial.list http://packages.lunarg.com/vulkan/$VK_VERSION/lunarg-vulkan-$VK_VERSION-xenial.list
  - sudo apt update
  - sudo apt install lunarg-vkconfig glslang-tools vulkan-sdk
  #- wget -O vulkan-sdk.tar.gz https://sdk.lunarg.com/sdk/download/$VK_VERSION/linux/vulkansdk-linux-x86_64-$VK_VERSION.tar.gz
  #- tar zxf vulkan-sdk.tar.gz
  #- export VULKAN_SDK=$TRAVIS_BUILD_DIR/$VK_VERSION/x86_64
script:
#  - servo-tidy
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender_api && cargo test --verbose --features "ipc"); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features capture,serde); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --features profiler,capture,serde); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --features replay,serde); fi
#  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features pathfinder); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features serialize_program); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd wrench && cargo check --verbose --features env_logger); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd examples && cargo check --verbose); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cargo test --all --verbose); fi
  - if [ $BUILD_KIND = RELEASE ]; then (cd wrench && cargo run --release --features vulkan -- --headless reftest); fi
  - if [ $TRAVIS_RUST_VERSION == "nightly" ]; then (cd webrender && cargo bench --verbose); fi