dist: trusty
language: rust

jobs:
  include:
    - name: "Debug"
      rust: "1.31.0"
      env: "BUILD_KIND=DEBUG"
      os: linux

    - name: "Debug"
      rust: "1.31.0"
      env: "BUILD_KIND=DEBUG"
      os: osx

    - name: "Release headless test"
      rust: "1.31.0"
      env: "BUILD_KIND=RELEASE_TEST"
      os: linux

    - name: "Release headless test"
      rust: "1.31.0"
      env: "BUILD_KIND=RELEASE_TEST"
      os: osx

    - name: "Release build"
      rust: "1.31.0"
      env: "BUILD_KIND=RELEASE_BUILD"
      os: linux

    - name: "Release build"
      rust: "1.31.0"
      env: "BUILD_KIND=RELEASE_BUILD"
      os: osx

# Nightly builds, allow_failures
    - name: "Debug"
      rust: "nightly"
      env: "BUILD_KIND=DEBUG"
      os: linux

    - name: "Debug"
      rust: "nightly"
      env: "BUILD_KIND=DEBUG"
      os: osx

    - name: "Release headless test"
      rust: "nightly"
      env: "BUILD_KIND=RELEASE_TEST"
      os: linux

    - name: "Release headless test"
      rust: "nightly"
      env: "BUILD_KIND=RELEASE_TEST"
      os: osx

    - name: "Release build"
      rust: "nightly"
      env: "BUILD_KIND=RELEASE_BUILD"
      os: linux

    - name: "Release build"
      rust: "nightly"
      env: "BUILD_KIND=RELEASE_BUILD"
      os: osx
  allow_failures:
    - rust: "nightly"
  fast_finish: true


env:
  global:
    - RUST_BACKTRACE=1 RUSTFLAGS='--deny warnings'

addons:
  apt:
    sources:
      - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
        keyurl: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
      - sourceline: 'ppa:jonathonf/python-2.7'
    packages:
      - libgl1-mesa-dev
      - llvm-3.9-dev
      - libedit-dev
      - python

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export LLVM_CONFIG=/usr/lib/llvm-3.9/bin/llvm-config; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install zlib; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig:$PKG_CONFIG_PATH"; fi
  - pip install virtualenv
  - virtualenv ../venv
  - source ../venv/bin/activate
  - python --version
  - pip install mako voluptuous PyYAML servo-tidy

script:
#  - servo-tidy
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender_api && cargo test --verbose --features "ipc"); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features capture,serde); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --features profiler,capture,serde); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --features replay,serde); fi
#  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features pathfinder); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd webrender && cargo check --verbose --no-default-features --features serialize_program); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd wrench && cargo check --verbose --features env_logger); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cd examples && cargo check --verbose); fi
  - if [ $BUILD_KIND = DEBUG ]; then (cargo test --all --verbose); fi
  - if [ $BUILD_KIND = RELEASE_TEST ]; then (cd wrench && python script/headless.py reftest); fi
  - if [ $BUILD_KIND = RELEASE_BUILD ]; then (cd wrench && cargo build --release); fi
  - if [ $TRAVIS_RUST_VERSION == "nightly" ]; then (cd webrender && cargo bench --verbose); fi